
<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>XTrong Games</title>
    <style>
      /* Estilo general oscuro y moderno */
      body {
        margin: 0;
        font-family: Arial, sans-serif;
        background-color: #111111;
        color: #ffffff;
        background-position: center center;
        background-repeat: no-repeat;
        background-size: cover;
      }

      header {
        background-color: #000000;
        display: flex;
        align-items: center;
        padding: 10px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.7);
      }
      .logo {
        font-size: 28px;
        font-weight: bold;
        text-transform: uppercase;
        letter-spacing: 2px;
      }
      .logo .x {
        color: red; /* X en rojo */
      }
      nav {
        margin-left: auto;
      }
      .admin-button, .logout-button {
        background-color: #333333;
        border: 1px solid red;
        padding: 8px 12px;
        color: #ffffff;
        cursor: pointer;
        text-transform: uppercase;
        transition: background-color 0.3s;
      }
      .admin-button:hover, .logout-button:hover {
        background-color: #555555;
      }
      .logout-button {
        margin-left: 10px;
      }

      .container {
        margin: 20px auto;
        max-width: 1200px;
        text-align: center;
        padding: 20px;
      }
      .section-title {
        font-size: 32px;
        margin-bottom: 20px;
        margin-top: 20px;
        text-transform: uppercase;
        letter-spacing: 2px;
        font-weight: 700;
        text-shadow: 1px 1px 2px rgba(0,0,0,0.7);
      }
      .hidden { display: none; }

      /* Pantalla principal */
      .x-buttons-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 40px; 
        margin-top: 40px;
      }
      .big-x-button {
        width: 220px;   
        height: 220px;
        position: relative;
        background: url("redX.png") no-repeat center center; /* Ajusta a tu imagen */
        background-size: contain; 
        cursor: pointer;
        transition: transform 0.3s;
      }
      .big-x-button:hover {
        transform: scale(1.1);
      }
      /* Texto centrado en la imagen de la X */
      .button-text {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        color: #ffffff;
        font-weight: bold;
        font-size: 20px;
        text-transform: uppercase;
        text-shadow: 1px 1px 2px rgba(0,0,0,0.7);
        pointer-events: none;
      }

      /* Tablas */
      table {
        width: 100%;
        border-collapse: collapse;
        margin: 20px 0;
        box-shadow: 0 2px 5px rgba(0,0,0,0.7);
      }
      table thead th {
        background-color: #222222;
        border-bottom: 2px solid red;
        padding: 12px;
        text-align: left;
        font-weight: 700;
        text-transform: uppercase;
      }
      table tbody td {
        border-bottom: 1px solid #444444;
        padding: 12px;
      }
      table tbody tr:hover {
        background-color: rgba(255,255,255,0.05);
      }

      .back-button {
        background-color: #333333;
        border: 1px solid red;
        color: #ffffff;
        padding: 10px 20px;
        cursor: pointer;
        margin-bottom: 20px;
        font-size: 16px;
        text-transform: uppercase;
        transition: background-color 0.3s;
      }
      .back-button:hover {
        background-color: #555555;
      }

      /* Responsive */
      @media (max-width: 768px) {
        .section-title {
          font-size: 24px;
        }
        .big-x-button {
          width: 150px;
          height: 150px;
        }
        .button-text {
          font-size: 16px;
        }
      }

      /* Panel de administración */
      .admin-container {
        background-color: #222222;
        padding: 10px;
        margin-top: 20px;
        text-align: left;
        box-shadow: 0 2px 5px rgba(0,0,0,0.7);
      }
      .admin-container label {
        display: block;
        margin-bottom: 5px;
        font-weight: 600;
      }
      .admin-container input, .admin-container select {
        margin-bottom: 10px;
        width: 220px;
        padding: 5px;
        border: 1px solid #444444;
        background-color: #111111;
        color: #ffffff;
      }
      .submit-button {
        background-color: red;
        border: none;
        color: #ffffff;
        padding: 8px 12px;
        cursor: pointer;
        text-transform: uppercase;
        font-weight: 700;
        transition: background-color 0.3s;
      }
      .submit-button:hover {
        background-color: #ff4d4d;
      }
    </style>
  </head>
  <body>
    <header>
      <div class="logo"><span class="x">X</span>Trong Games</div>
      <nav>
        <button class="admin-button" onclick="showAdminPanel()">Admin Login</button>
        <button class="logout-button hidden" id="logoutButton" onclick="logout()">Salir</button>
      </nav>
    </header>

    <!-- HOME SECTION -->
    <div class="container" id="homeSection">
      <h1 class="section-title">Bienvenidos a XTrong Games</h1>
      <p style="font-size:18px; letter-spacing:1px; margin-bottom:30px;">
        ¡La competición definitiva para amantes del CrossFit!
      </p>
      <div class="x-buttons-container">
        <!-- Botón X 1: Horario -->
        <div class="big-x-button" onclick="goToSchedule()">
          <div class="button-text">Horario</div>
        </div>
        <!-- Botón X 2: Ranking -->
        <div class="big-x-button" onclick="goToRanking()">
          <div class="button-text">Ranking</div>
        </div>
        <!-- Botón X 3: Sorteo -->
        <div class="big-x-button" onclick="participarSorteo()">
          <div class="button-text">Sorteo</div>
        </div>
      </div>
    </div>

    <!-- SCHEDULE SECTION -->
    <div class="container hidden" id="scheduleSection">
      <button class="back-button" onclick="goHome()">&larr; Volver</button>
      <h2 class="section-title">Horarios de Salida</h2>
      <div id="scheduleList">
        <p>No hay atletas cargados todavía.</p>
      </div>
    </div>

    <!-- RANKING SECTION -->
    <div class="container hidden" id="rankingSection">
      <button class="back-button" onclick="goHome()">&larr; Volver</button>

      <h2 class="section-title">Ranking General Masculino (Individual)</h2>
      <table>
        <thead>
          <tr>
            <th>Pos</th>
            <th>Bib</th>
            <th>Nombre</th>
            <th>Edad</th>
            <th>Rango</th>
            <th>Tiempo</th>
            <th>Detalle</th>
          </tr>
        </thead>
        <tbody id="rankingMenBody"></tbody>
      </table>

      <h2 class="section-title">Ranking General Femenino (Individual)</h2>
      <table>
        <thead>
          <tr>
            <th>Pos</th>
            <th>Bib</th>
            <th>Nombre</th>
            <th>Edad</th>
            <th>Rango</th>
            <th>Tiempo</th>
            <th>Detalle</th>
          </tr>
        </thead>
        <tbody id="rankingWomenBody"></tbody>
      </table>

      <h2 class="section-title">Ranking Edades Masculino</h2>
      <table>
        <thead>
          <tr>
            <th>Pos</th>
            <th>Bib</th>
            <th>Nombre</th>
            <th>Rango Edad</th>
            <th>Tiempo</th>
            <th>Detalle</th>
          </tr>
        </thead>
        <tbody id="rankingAgeMenBody"></tbody>
      </table>

      <h2 class="section-title">Ranking Edades Femenino</h2>
      <table>
        <thead>
          <tr>
            <th>Pos</th>
            <th>Bib</th>
            <th>Nombre</th>
            <th>Rango Edad</th>
            <th>Tiempo</th>
            <th>Detalle</th>
          </tr>
        </thead>
        <tbody id="rankingAgeWomenBody"></tbody>
      </table>

      <h2 class="section-title">Ranking Parejas Men</h2>
      <table>
        <thead>
          <tr>
            <th>Pos</th>
            <th>Bib</th>
            <th>Nombre 1</th>
            <th>Rango1</th>
            <th>Nombre 2</th>
            <th>Rango2</th>
            <th>Tiempo</th>
            <th>Detalle</th>
          </tr>
        </thead>
        <tbody id="pairsMenBody"></tbody>
      </table>

      <h2 class="section-title">Ranking Parejas Women</h2>
      <table>
        <thead>
          <tr>
            <th>Pos</th>
            <th>Bib</th>
            <th>Nombre 1</th>
            <th>Rango1</th>
            <th>Nombre 2</th>
            <th>Rango2</th>
            <th>Tiempo</th>
            <th>Detalle</th>
          </tr>
        </thead>
        <tbody id="pairsWomenBody"></tbody>
      </table>

      <h2 class="section-title">Ranking Parejas Mixto</h2>
      <table>
        <thead>
          <tr>
            <th>Pos</th>
            <th>Bib</th>
            <th>Nombre 1</th>
            <th>Rango1</th>
            <th>Nombre 2</th>
            <th>Rango2</th>
            <th>Tiempo</th>
            <th>Detalle</th>
          </tr>
        </thead>
        <tbody id="pairsMixBody"></tbody>
      </table>
    </div>

    <!-- DETAIL SECTION -->
    <div class="container hidden" id="detailSection">
      <button class="back-button" onclick="goToRanking()">&larr; Volver</button>
      <h2 class="section-title">Detalle del Atleta</h2>
      <p id="detailHeader">Información del Atleta</p>
      <table>
        <thead>
          <tr>
            <th>Segmento</th>
            <th>Tiempo</th>
          </tr>
        </thead>
        <tbody id="detailTableBody"></tbody>
      </table>
    </div>

    <!-- ADMIN PANEL -->
    <div class="container hidden" id="adminPanel">
      <h2 class="section-title">Panel de Administración</h2>
      <div class="admin-container">
        <h3>Añadir fondo para pantalla principal</h3>
        <label for="publicBackground">Seleccionar Fondo:</label>
        <input type="file" id="publicBackground" accept="image/*" />
        <button onclick="cambiarFondoPublico()">Cambiar Fondo</button>
      </div>

      <div class="admin-container">
        <h3>Añadir Atleta / Pareja</h3>
        <label for="categorySelect">Categoría:</label>
        <select id="categorySelect" onchange="onCategoryChange()">
          <option value="individual">Individual</option>
          <option value="parejas">Parejas</option>
        </select>
        <br />

        <!-- INDIVIDUAL FORM -->
        <div id="individualForm">
          <label>Nombre:</label>
          <input type="text" id="individualName" placeholder="Nombre" /><br />

          <label>Edad:</label>
          <input type="number" id="individualAge" placeholder="Edad" /><br />

          <label>Género:</label>
          <select id="genderSelect">
            <option value="men">Men</option>
            <option value="women">Women</option>
          </select><br />

          <label>Bib:</label>
          <input type="text" id="individualBib" placeholder="Número de dorsal" /><br />

          <label>Tiempo (hh:mm:ss):</label>
          <input type="text" id="individualTime" placeholder="00:00:00" /><br />

          <label>Horario (ej: Heat 1):</label>
          <input type="text" id="individualHeat" placeholder="Heat" /><br />

          <button class="submit-button" onclick="addIndividual()">Añadir Individual</button>
        </div>

        <!-- PAREJAS FORM -->
        <div id="parejasForm" class="hidden">
          <label>Bib Pareja:</label>
          <input type="text" id="parejaBib" placeholder="Número de dorsal" /><br />

          <label>Nombre Persona 1:</label>
          <input type="text" id="pareja1Name" /><br />
          <label>Edad Persona 1:</label>
          <input type="number" id="pareja1Age" /><br />

          <label>Nombre Persona 2:</label>
          <input type="text" id="pareja2Name" /><br />
          <label>Edad Persona 2:</label>
          <input type="number" id="pareja2Age" /><br />

          <label>Categoría Parejas:</label>
          <select id="genderPairSelect">
            <option value="men">Parejas Men</option>
            <option value="women">Parejas Women</option>
            <option value="mixto">Parejas Mixto</option>
          </select><br />

          <label>Tiempo (hh:mm:ss):</label>
          <input type="text" id="parejaTime" placeholder="00:00:00" /><br />

          <label>Horario (ej: Heat 2):</label>
          <input type="text" id="parejaHeat" placeholder="Heat" /><br />

          <button class="submit-button" onclick="addPareja()">Añadir Pareja</button>
        </div>
      </div>
    </div>

    <script>
      // Arrays para almacenar la información
      let individuals = [];
      let pairs = [];

      let isAdminLoggedIn = false;
      const adminUsername = "Xone";
      const adminPassword = "XStrong";

      // Si hay fondo guardado, lo cargamos
      window.addEventListener("load", () => {
        const savedBackground = localStorage.getItem("xtrongBackground");
        if (savedBackground) {
          document.body.style.backgroundImage = `url(${savedBackground})`;
        }
      });

      function showAdminPanel() {
        const username = prompt("Usuario:");
        const password = prompt("Contraseña:");

        if (username === adminUsername && password === adminPassword) {
          isAdminLoggedIn = true;
          document.getElementById("adminPanel").classList.remove("hidden");
          document.getElementById("logoutButton").classList.remove("hidden");
        } else {
          alert("Credenciales incorrectas.");
        }
      }

      function logout() {
        isAdminLoggedIn = false;
        document.getElementById("adminPanel").classList.add("hidden");
        document.getElementById("logoutButton").classList.add("hidden");
      }

      function cambiarFondoPublico() {
        const fileInput = document.getElementById("publicBackground");
        if (fileInput.files && fileInput.files[0]) {
          const reader = new FileReader();
          reader.onload = function(e) {
            localStorage.setItem("xtrongBackground", e.target.result);
            document.body.style.backgroundImage = `url(${e.target.result})`;
          };
          reader.readAsDataURL(fileInput.files[0]);
        }
      }

      function onCategoryChange() {
        const categorySelect = document.getElementById("categorySelect").value;
        const individualForm = document.getElementById("individualForm");
        const parejasForm = document.getElementById("parejasForm");

        if (categorySelect === "individual") {
          individualForm.classList.remove("hidden");
          parejasForm.classList.add("hidden");
        } else {
          individualForm.classList.add("hidden");
          parejasForm.classList.remove("hidden");
        }
      }

      function addIndividual() {
        const name = document.getElementById("individualName").value;
        const age = parseInt(document.getElementById("individualAge").value) || 0;
        const gender = document.getElementById("genderSelect").value; // men|women
        const bib = document.getElementById("individualBib").value;
        const time = document.getElementById("individualTime").value;
        const heat = document.getElementById("individualHeat").value;
        const rango = calcularRangoEdad(age);

        const newAthlete = {
          bib,
          name,
          age,
          gender,
          rango,
          time,
          heat,
        };

        individuals.push(newAthlete);
        alert(`Atleta Individual añadido: ${name} (${gender}), Rango: ${rango}`);

        // Limpiar
        document.getElementById("individualName").value = "";
        document.getElementById("individualAge").value = "";
        document.getElementById("individualBib").value = "";
        document.getElementById("individualTime").value = "";
        document.getElementById("individualHeat").value = "";

        refreshAll();
      }

      function addPareja() {
        const bib = document.getElementById("parejaBib").value;
        const name1 = document.getElementById("pareja1Name").value;
        const age1 = parseInt(document.getElementById("pareja1Age").value) || 0;
        const name2 = document.getElementById("pareja2Name").value;
        const age2 = parseInt(document.getElementById("pareja2Age").value) || 0;
        const pairCat = document.getElementById("genderPairSelect").value;
        const time = document.getElementById("parejaTime").value;
        const heat = document.getElementById("parejaHeat").value;

        const rango1 = calcularRangoEdad(age1);
        const rango2 = calcularRangoEdad(age2);

        const newPair = {
          bib,
          name1,
          age1,
          rango1,
          name2,
          age2,
          rango2,
          pairCat,
          time,
          heat,
        };

        pairs.push(newPair);
        alert(`Pareja añadida: ${name1} & ${name2}, ${pairCat}, Rangos: ${rango1} y ${rango2}`);

        // Limpiar
        document.getElementById("parejaBib").value = "";
        document.getElementById("pareja1Name").value = "";
        document.getElementById("pareja1Age").value = "";
        document.getElementById("pareja2Name").value = "";
        document.getElementById("pareja2Age").value = "";
        document.getElementById("parejaTime").value = "";
        document.getElementById("parejaHeat").value = "";

        refreshAll();
      }

      function calcularRangoEdad(age) {
        const base = Math.floor(age / 10) * 10;
        return `${base}-${base + 9}`;
      }

      // Refrescamos listado de horarios y rankings
      function refreshAll() {
        refreshSchedule();
        refreshRankings();
      }

      function refreshSchedule() {
        const scheduleDiv = document.getElementById("scheduleList");
        if (individuals.length === 0 && pairs.length === 0) {
          scheduleDiv.innerHTML = "<p>No hay atletas cargados todavía.</p>";
          return;
        }
        const scheduleMap = {};
        // Insertar individuales
        individuals.forEach((ind) => {
          if (!scheduleMap[ind.heat]) scheduleMap[ind.heat] = [];
          scheduleMap[ind.heat].push(`${ind.bib} - ${ind.name} (${ind.gender})`);
        });
        // Insertar parejas
        pairs.forEach((p) => {
          if (!scheduleMap[p.heat]) scheduleMap[p.heat] = [];
          scheduleMap[p.heat].push(`${p.bib} - ${p.name1} & ${p.name2} (${p.pairCat})`);
        });

        let html = "";
        for (const heatKey in scheduleMap) {
          if (!heatKey || heatKey.trim() === "") continue;
          html += `<h3 style="margin-top:20px; font-size:22px; text-transform:uppercase;">${heatKey}</h3><ul style="list-style:none; padding-left:0;">`;
          scheduleMap[heatKey].forEach((line) => {
            html += `<li style="margin:5px 0;">${line}</li>`;
          });
          html += "</ul>";
        }
        scheduleDiv.innerHTML = html;
      }

     function participarSorteo() {
        alert("¡Gracias por participar en el sorteo / votación!");
      }
    </script>
  </body>
</html>
